{
  "error_name": "1ac74b5-nearest-L68-1",
  "error": {
    "reason": "compiler-message",
    "package_id": "path+file:///Users/cole/git/flux-examples/flux-tests#fluxtests@0.1.0",
    "manifest_path": "/Users/cole/git/flux-examples/flux-tests/Cargo.toml",
    "target": {
      "kind": [
        "dylib",
        "rlib"
      ],
      "crate_types": [
        "dylib",
        "rlib"
      ],
      "name": "fluxtests",
      "src_path": "/Users/cole/git/flux-examples/flux-tests/src/lib.rs",
      "edition": "2021",
      "doc": true,
      "doctest": true,
      "test": true
    },
    "message": {
      "message": "refinement type error",
      "code": {
        "code": "E0999",
        "explanation": null
      },
      "level": "error",
      "spans": [
        {
          "file_name": "src/kmeans.rs",
          "byte_start": 1624,
          "byte_end": 1639,
          "line_start": 68,
          "line_end": 68,
          "column_start": 18,
          "column_end": 33,
          "is_primary": true,
          "text": [
            {
              "text": "        let di = dist(&cs[i], p);",
              "highlight_start": 18,
              "highlight_end": 33
            }
          ],
          "label": "a precondition cannot be proved",
          "suggested_replacement": null,
          "suggestion_applicability": null
        }
      ],
      "children": [
        {
          "message": "constraint that could not be proven: `p = [i]`",
          "code": null,
          "level": "note",
          "spans": [],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "try adding a refinement to the function `<rvec::RVec<T> as std::ops::Index<usize>>::index`",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/rvec.rs",
              "byte_start": 4163,
              "byte_end": 4168,
              "line_start": 182,
              "line_end": 182,
              "column_start": 8,
              "column_end": 13,
              "is_primary": true,
              "text": [
                {
                  "text": "    fn index(&self, index: usize) -> &T {",
                  "highlight_start": 8,
                  "highlight_end": 13
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`[i]` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/kmeans.rs",
              "byte_start": 1632,
              "byte_end": 1635,
              "line_start": 68,
              "line_end": 68,
              "column_start": 26,
              "column_end": 29,
              "is_primary": true,
              "text": [
                {
                  "text": "        let di = dist(&cs[i], p);",
                  "highlight_start": 26,
                  "highlight_end": 29
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`p` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/kmeans.rs",
              "byte_start": 1427,
              "byte_end": 1428,
              "line_start": 61,
              "line_end": 61,
              "column_start": 12,
              "column_end": 13,
              "is_primary": true,
              "text": [
                {
                  "text": "fn nearest(p: &RVec<f32>, cs: &RVec<RVec<f32>>) -> usize {",
                  "highlight_start": 12,
                  "highlight_end": 13
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        }
      ],
      "rendered": "error[E0999]: refinement type error\n   --> src/kmeans.rs:68:18\n    |\n68  |         let di = dist(&cs[i], p);\n    |                  ^^^^^^^^^^^^^^^ a precondition cannot be proved\n    |\n    = note: constraint that could not be proven: `p = [i]`\nnote: try adding a refinement to the function `<rvec::RVec<T> as std::ops::Index<usize>>::index`\n   --> src/rvec.rs:182:8\n    |\n182 |     fn index(&self, index: usize) -> &T {\n    |        ^^^^^\nnote: `[i]` defined here\n   --> src/kmeans.rs:68:26\n    |\n68  |         let di = dist(&cs[i], p);\n    |                          ^^^\nnote: `p` defined here\n   --> src/kmeans.rs:61:12\n    |\n61  | fn nearest(p: &RVec<f32>, cs: &RVec<RVec<f32>>) -> usize {\n    |            ^\n\n",
      "$message_type": "diagnostic"
    }
  },
  "fixes": [
    {
      "fix_lines": [
        {
          "line": 61,
          "file": "src/kmeans.rs",
          "added_reft": "p: &RVec<f32>[@n], cs: &RVec<RVec<f32>[n]>"
        }
      ],
      "note": "Need two refts to relate size"
    }
  ],
  "error_lines": [
    {
      "line": 68,
      "file": "src/kmeans.rs"
    },
    {
      "line": 182,
      "file": "src/rvec.rs"
    },
    {
      "line": 68,
      "file": "src/kmeans.rs"
    },
    {
      "line": 61,
      "file": "src/kmeans.rs"
    }
  ]
}