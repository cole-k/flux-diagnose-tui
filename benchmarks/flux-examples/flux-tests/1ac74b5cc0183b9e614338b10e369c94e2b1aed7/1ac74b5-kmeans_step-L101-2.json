{
  "error_name": "1ac74b5-kmeans_step-L101-2",
  "error": {
    "reason": "compiler-message",
    "package_id": "path+file:///Users/cole/git/flux-examples/flux-tests#fluxtests@0.1.0",
    "manifest_path": "/Users/cole/git/flux-examples/flux-tests/Cargo.toml",
    "target": {
      "kind": [
        "dylib",
        "rlib"
      ],
      "crate_types": [
        "dylib",
        "rlib"
      ],
      "name": "fluxtests",
      "src_path": "/Users/cole/git/flux-examples/flux-tests/src/lib.rs",
      "edition": "2021",
      "doc": true,
      "doctest": true,
      "test": true
    },
    "message": {
      "message": "refinement type error",
      "code": {
        "code": "E0999",
        "explanation": null
      },
      "level": "error",
      "spans": [
        {
          "file_name": "src/kmeans.rs",
          "byte_start": 2480,
          "byte_end": 2511,
          "line_start": 101,
          "line_end": 101,
          "column_start": 9,
          "column_end": 40,
          "is_primary": true,
          "text": [
            {
              "text": "        add(&mut res_points[j], &ps[i]);",
              "highlight_start": 9,
              "highlight_end": 40
            }
          ],
          "label": "a precondition cannot be proved",
          "suggested_replacement": null,
          "suggestion_applicability": null
        }
      ],
      "children": [
        {
          "message": "constraint that could not be proven: `[i] = a7`",
          "code": null,
          "level": "note",
          "spans": [],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "try adding a refinement to the function `<rvec::RVec<T> as std::ops::Index<usize>>::index`",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/rvec.rs",
              "byte_start": 4163,
              "byte_end": 4168,
              "line_start": 182,
              "line_end": 182,
              "column_start": 8,
              "column_end": 13,
              "is_primary": true,
              "text": [
                {
                  "text": "    fn index(&self, index: usize) -> &T {",
                  "highlight_start": 8,
                  "highlight_end": 13
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`[i]` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/kmeans.rs",
              "byte_start": 2507,
              "byte_end": 2510,
              "line_start": 101,
              "line_end": 101,
              "column_start": 36,
              "column_end": 39,
              "is_primary": true,
              "text": [
                {
                  "text": "        add(&mut res_points[j], &ps[i]);",
                  "highlight_start": 36,
                  "highlight_end": 39
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        }
      ],
      "rendered": "error[E0999]: refinement type error\n   --> src/kmeans.rs:101:9\n    |\n101 |         add(&mut res_points[j], &ps[i]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ a precondition cannot be proved\n    |\n    = note: constraint that could not be proven: `[i] = a7`\nnote: try adding a refinement to the function `<rvec::RVec<T> as std::ops::Index<usize>>::index`\n   --> src/rvec.rs:182:8\n    |\n182 |     fn index(&self, index: usize) -> &T {\n    |        ^^^^^\nnote: `[i]` defined here\n   --> src/kmeans.rs:101:36\n    |\n101 |         add(&mut res_points[j], &ps[i]);\n    |                                    ^^^\n\n",
      "$message_type": "diagnostic"
    }
  },
  "fixes": [
    {
      "fix_lines": [
        {
          "line": 91,
          "file": "src/kmeans.rs",
          "added_reft": "n: usize, cs: RVec<RVec<f32>[n]>[@k], ps: RVec<RVec<f32>[n]>[k]"
        }
      ],
      "note": null,
      "is_trivial": false
    }
  ],
  "error_lines": [
    {
      "line": 101,
      "file": "src/kmeans.rs"
    },
    {
      "line": 182,
      "file": "src/rvec.rs"
    },
    {
      "line": 101,
      "file": "src/kmeans.rs"
    }
  ]
}