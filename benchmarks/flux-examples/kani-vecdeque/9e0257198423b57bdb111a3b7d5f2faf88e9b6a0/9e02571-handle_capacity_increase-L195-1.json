{
  "error_name": "9e02571-handle_capacity_increase-L195-1",
  "error": {
    "reason": "compiler-message",
    "package_id": "path+file:///Users/cole/git/flux-examples/kani-vecdeque#vecdeque@0.1.0",
    "manifest_path": "/Users/cole/git/flux-examples/kani-vecdeque/Cargo.toml",
    "target": {
      "kind": [
        "dylib",
        "rlib"
      ],
      "crate_types": [
        "dylib",
        "rlib"
      ],
      "name": "vecdeque",
      "src_path": "/Users/cole/git/flux-examples/kani-vecdeque/src/lib.rs",
      "edition": "2021",
      "doc": true,
      "doctest": true,
      "test": true
    },
    "message": {
      "message": "arithmetic operation may overflow",
      "code": {
        "code": "E0999",
        "explanation": null
      },
      "level": "error",
      "spans": [
        {
          "file_name": "src/vec_deque.rs",
          "byte_start": 6492,
          "byte_end": 6518,
          "line_start": 195,
          "line_end": 195,
          "column_start": 43,
          "column_end": 69,
          "is_primary": true,
          "text": [
            {
              "text": "            let new_tail = new_capacity - (old_capacity - self.tail);",
              "highlight_start": 43,
              "highlight_end": 69
            }
          ],
          "label": null,
          "suggested_replacement": null,
          "suggestion_applicability": null
        }
      ],
      "children": [
        {
          "message": "constraint that could not be proven: `old_capacity - a3.tail ≥ 0`",
          "code": null,
          "level": "note",
          "spans": [],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "try adding a refinement to `old_capacity`, defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 5449,
              "byte_end": 5461,
              "line_start": 165,
              "line_end": 165,
              "column_start": 51,
              "column_end": 63,
              "is_primary": true,
              "text": [
                {
                  "text": "    unsafe fn handle_capacity_increase(&mut self, old_capacity: usize) {",
                  "highlight_start": 51,
                  "highlight_end": 63
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        }
      ],
      "rendered": "error[E0999]: arithmetic operation may overflow\n   --> src/vec_deque.rs:195:43\n    |\n195 |             let new_tail = new_capacity - (old_capacity - self.tail);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: constraint that could not be proven: `old_capacity - a3.tail ≥ 0`\nnote: try adding a refinement to `old_capacity`, defined here\n   --> src/vec_deque.rs:165:51\n    |\n165 |     unsafe fn handle_capacity_increase(&mut self, old_capacity: usize) {\n    |                                                   ^^^^^^^^^^^^\n\n",
      "$message_type": "diagnostic"
    }
  },
  "fixes": [
    {
      "fix_lines": [
        {
          "line": 165,
          "file": "src/vec_deque.rs",
          "added_reft": "old_capacity: {v: v >= self.tail}"
        }
      ],
      "note": null,
      "is_trivial": true
    }
  ],
  "error_lines": [
    {
      "line": 195,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 165,
      "file": "src/vec_deque.rs"
    }
  ]
}