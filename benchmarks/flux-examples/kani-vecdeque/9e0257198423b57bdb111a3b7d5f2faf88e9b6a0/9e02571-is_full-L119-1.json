{
  "error_name": "9e02571-is_full-L119-1",
  "error": {
    "reason": "compiler-message",
    "package_id": "path+file:///Users/cole/git/flux-examples/kani-vecdeque#vecdeque@0.1.0",
    "manifest_path": "/Users/cole/git/flux-examples/kani-vecdeque/Cargo.toml",
    "target": {
      "kind": [
        "dylib",
        "rlib"
      ],
      "crate_types": [
        "dylib",
        "rlib"
      ],
      "name": "vecdeque",
      "src_path": "/Users/cole/git/flux-examples/kani-vecdeque/src/lib.rs",
      "edition": "2021",
      "doc": true,
      "doctest": true,
      "test": true
    },
    "message": {
      "message": "arithmetic operation may overflow",
      "code": {
        "code": "E0999",
        "explanation": null
      },
      "level": "error",
      "spans": [
        {
          "file_name": "src/vec_deque.rs",
          "byte_start": 3918,
          "byte_end": 3941,
          "line_start": 119,
          "line_end": 119,
          "column_start": 9,
          "column_end": 32,
          "is_primary": true,
          "text": [
            {
              "text": "        self.cap() - self.len() == 1",
              "highlight_start": 9,
              "highlight_end": 32
            }
          ],
          "label": null,
          "suggested_replacement": null,
          "suggestion_applicability": null
        }
      ],
      "children": [
        {
          "message": "constraint that could not be proven: `self.cap() - self.len() ≥ 0`",
          "code": null,
          "level": "note",
          "spans": [],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "try adding a refinement to the function `vec_deque::VecDeque::<T, A>::len`",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 12585,
              "byte_end": 12588,
              "line_start": 404,
              "line_end": 404,
              "column_start": 12,
              "column_end": 15,
              "is_primary": true,
              "text": [
                {
                  "text": "    pub fn len(&self) -> usize {",
                  "highlight_start": 12,
                  "highlight_end": 15
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`self.len()` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 3931,
              "byte_end": 3941,
              "line_start": 119,
              "line_end": 119,
              "column_start": 22,
              "column_end": 32,
              "is_primary": true,
              "text": [
                {
                  "text": "        self.cap() - self.len() == 1",
                  "highlight_start": 22,
                  "highlight_end": 32
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`self.cap()` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 3918,
              "byte_end": 3928,
              "line_start": 119,
              "line_end": 119,
              "column_start": 9,
              "column_end": 19,
              "is_primary": true,
              "text": [
                {
                  "text": "        self.cap() - self.len() == 1",
                  "highlight_start": 9,
                  "highlight_end": 19
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "related function `vec_deque::VecDeque::<T, A>::cap` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 3360,
              "byte_end": 3363,
              "line_start": 99,
              "line_end": 99,
              "column_start": 8,
              "column_end": 11,
              "is_primary": true,
              "text": [
                {
                  "text": "    fn cap(&self) -> usize {",
                  "highlight_start": 8,
                  "highlight_end": 11
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        }
      ],
      "rendered": "error[E0999]: arithmetic operation may overflow\n   --> src/vec_deque.rs:119:9\n    |\n119 |         self.cap() - self.len() == 1\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: constraint that could not be proven: `self.cap() - self.len() ≥ 0`\nnote: try adding a refinement to the function `vec_deque::VecDeque::<T, A>::len`\n   --> src/vec_deque.rs:404:12\n    |\n404 |     pub fn len(&self) -> usize {\n    |            ^^^\nnote: `self.len()` defined here\n   --> src/vec_deque.rs:119:22\n    |\n119 |         self.cap() - self.len() == 1\n    |                      ^^^^^^^^^^\nnote: `self.cap()` defined here\n   --> src/vec_deque.rs:119:9\n    |\n119 |         self.cap() - self.len() == 1\n    |         ^^^^^^^^^^\nnote: related function `vec_deque::VecDeque::<T, A>::cap` defined here\n   --> src/vec_deque.rs:99:8\n    |\n99  |     fn cap(&self) -> usize {\n    |        ^^^\n\n",
      "$message_type": "diagnostic"
    }
  },
  "fixes": [
    {
      "fix_lines": [
        {
          "line": 99,
          "file": "src/vec_deque.rs",
          "added_reft": "output[self.cap]"
        },
        {
          "line": 404,
          "file": "src/vec_deque.rs",
          "added_reft": "output: {v: v <= self.cap}"
        }
      ],
      "note": null,
      "is_trivial": false
    }
  ],
  "error_lines": [
    {
      "line": 119,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 404,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 119,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 119,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 99,
      "file": "src/vec_deque.rs"
    }
  ]
}