{
  "error_name": "9e02571-push_back-L534-1",
  "error": {
    "reason": "compiler-message",
    "package_id": "path+file:///Users/cole/git/flux-examples/kani-vecdeque#vecdeque@0.1.0",
    "manifest_path": "/Users/cole/git/flux-examples/kani-vecdeque/Cargo.toml",
    "target": {
      "kind": [
        "dylib",
        "rlib"
      ],
      "crate_types": [
        "dylib",
        "rlib"
      ],
      "name": "vecdeque",
      "src_path": "/Users/cole/git/flux-examples/kani-vecdeque/src/lib.rs",
      "edition": "2021",
      "doc": true,
      "doctest": true,
      "test": true
    },
    "message": {
      "message": "assignment might be unsafe",
      "code": {
        "code": "E0999",
        "explanation": null
      },
      "level": "error",
      "spans": [
        {
          "file_name": "src/vec_deque.rs",
          "byte_start": 15808,
          "byte_end": 15847,
          "line_start": 534,
          "line_end": 534,
          "column_start": 9,
          "column_end": 48,
          "is_primary": true,
          "text": [
            {
              "text": "        self.head = self.wrap_add(self.head, 1);",
              "highlight_start": 9,
              "highlight_end": 48
            }
          ],
          "label": null,
          "suggested_replacement": null,
          "suggestion_applicability": null
        }
      ],
      "children": [
        {
          "message": "constraint that could not be proven: `self.wrap_add(self.head, 1) = a3.head`",
          "code": null,
          "level": "note",
          "spans": [],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "try adding a refinement to the function `vec_deque::VecDeque::<T, A>::wrap_add`",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 4078,
              "byte_end": 4086,
              "line_start": 125,
              "line_end": 125,
              "column_start": 8,
              "column_end": 16,
              "is_primary": true,
              "text": [
                {
                  "text": "    fn wrap_add(&self, idx: usize, addend: usize) -> usize {",
                  "highlight_start": 8,
                  "highlight_end": 16
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        },
        {
          "message": "`self.wrap_add(self.head, 1)` defined here",
          "code": null,
          "level": "note",
          "spans": [
            {
              "file_name": "src/vec_deque.rs",
              "byte_start": 15820,
              "byte_end": 15847,
              "line_start": 534,
              "line_end": 534,
              "column_start": 21,
              "column_end": 48,
              "is_primary": true,
              "text": [
                {
                  "text": "        self.head = self.wrap_add(self.head, 1);",
                  "highlight_start": 21,
                  "highlight_end": 48
                }
              ],
              "label": null,
              "suggested_replacement": null,
              "suggestion_applicability": null
            }
          ],
          "children": [],
          "rendered": null,
          "$message_type": null
        }
      ],
      "rendered": "error[E0999]: assignment might be unsafe\n   --> src/vec_deque.rs:534:9\n    |\n534 |         self.head = self.wrap_add(self.head, 1);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: constraint that could not be proven: `self.wrap_add(self.head, 1) = a3.head`\nnote: try adding a refinement to the function `vec_deque::VecDeque::<T, A>::wrap_add`\n   --> src/vec_deque.rs:125:8\n    |\n125 |     fn wrap_add(&self, idx: usize, addend: usize) -> usize {\n    |        ^^^^^^^^\nnote: `self.wrap_add(self.head, 1)` defined here\n   --> src/vec_deque.rs:534:21\n    |\n534 |         self.head = self.wrap_add(self.head, 1);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
      "$message_type": "diagnostic"
    }
  },
  "fixes": [
    {
      "fix_lines": [
        {
          "line": 125,
          "file": "src/vec_deque.rs",
          "added_reft": "output: {v: v < self.cap}"
        }
      ],
      "note": null
    }
  ],
  "error_lines": [
    {
      "line": 534,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 125,
      "file": "src/vec_deque.rs"
    },
    {
      "line": 534,
      "file": "src/vec_deque.rs"
    }
  ]
}